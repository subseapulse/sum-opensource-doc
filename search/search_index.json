{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the sum-opensource documentation This project provides a wrapper for the JANUS library for a more convenient use, both stand-alone and integrated as part of the SubSeaPulse SuM project. When used stand-alone, sum-opensource constitutes a complete acoustic SDM software stack, taking care of the whole transmission and reception processes: from message coding/decoding and modulation to interfacing with audio interfaces. More precisely, the suite will manage DAC/ADC access, perform DSP operations using JANUS, manage transmission and reception plus, when installed and run on the SuM, GPIO functions for controlling the TX/RX switch. The project's software is intended to be run on Linux, therefore this guide provides information for installation and usage only for these systems. If embedded in the SuM this module instead allows the modem's software suite to make use of the official JANUS library allowing powerful, noise-resistant underwater communication while taking advantage of the SuM's flexibility and versatility. Index Please refer to the different sections of this guide: Installation contains the steps to install the software. Usage contains information about the command-line usage and parameters. Home - this page: index and credits. Credits SubSeaPulse Srl","title":"Home"},{"location":"#welcome-to-the-sum-opensource-documentation","text":"This project provides a wrapper for the JANUS library for a more convenient use, both stand-alone and integrated as part of the SubSeaPulse SuM project. When used stand-alone, sum-opensource constitutes a complete acoustic SDM software stack, taking care of the whole transmission and reception processes: from message coding/decoding and modulation to interfacing with audio interfaces. More precisely, the suite will manage DAC/ADC access, perform DSP operations using JANUS, manage transmission and reception plus, when installed and run on the SuM, GPIO functions for controlling the TX/RX switch. The project's software is intended to be run on Linux, therefore this guide provides information for installation and usage only for these systems. If embedded in the SuM this module instead allows the modem's software suite to make use of the official JANUS library allowing powerful, noise-resistant underwater communication while taking advantage of the SuM's flexibility and versatility.","title":"Welcome to the sum-opensource documentation"},{"location":"#index","text":"Please refer to the different sections of this guide: Installation contains the steps to install the software. Usage contains information about the command-line usage and parameters. Home - this page: index and credits.","title":"Index"},{"location":"#credits","text":"SubSeaPulse Srl","title":"Credits"},{"location":"install/","text":"Installation 1. Dependencies and prerequisites Before installation, the following dependencies must be satisfied: JANUS library, to be installed in the default path. Refer to the JANUS website for download and installation procedures. Note: usage of JANUS ver. 3.0.5 is recommended libasound2 library, which can be installed by running sudo apt-get install libasound2 libgpiod-dev library, which can be installed by running sudo apt install libgpiod-dev 2. Module installation You may obtain the project's source code by cloning its Git repository using the following command: git clone https://github.com/subseapulse/sum-opensource.git The project source files include an installation script named installer.sh which supports the following options: -h List parameters (these) -p <path> Prefix path (usually, home directory) -c Clean repository Standard installation is usually carried out typing the command ./installer.sh -p /home/<youruser> where <youruser> is to be replaced by your system username. After successfull installation you will find the janus_executable binary file inside the janus_executable directory. Running that file sets the hardware up and prepares for communication: see the Usage section for further guidance.","title":"Installation"},{"location":"install/#installation","text":"","title":"Installation"},{"location":"install/#1-dependencies-and-prerequisites","text":"Before installation, the following dependencies must be satisfied: JANUS library, to be installed in the default path. Refer to the JANUS website for download and installation procedures. Note: usage of JANUS ver. 3.0.5 is recommended libasound2 library, which can be installed by running sudo apt-get install libasound2 libgpiod-dev library, which can be installed by running sudo apt install libgpiod-dev","title":"1. Dependencies and prerequisites"},{"location":"install/#2-module-installation","text":"You may obtain the project's source code by cloning its Git repository using the following command: git clone https://github.com/subseapulse/sum-opensource.git The project source files include an installation script named installer.sh which supports the following options: -h List parameters (these) -p <path> Prefix path (usually, home directory) -c Clean repository Standard installation is usually carried out typing the command ./installer.sh -p /home/<youruser> where <youruser> is to be replaced by your system username. After successfull installation you will find the janus_executable binary file inside the janus_executable directory. Running that file sets the hardware up and prepares for communication: see the Usage section for further guidance.","title":"2. Module installation"},{"location":"usage/","text":"Usage of the sum-opensource module After installation , the binary file janus_executable will be created inside the janus_executable folder. That file is executable and has to run for the modem to operate. Parameters janus_executable can be run specifying either no parameters or all of them. When specifying parameters, the user must provide all of them in the following order: ./janus_executable sampling_frequency center_frequency bandwidth tx_gain src_addr dest_addr verbosity When no parameters are specified default values are used. The parameters are explained in detail in the table below. Default values are also reported. Parameter name Info Valid type [and range] Default value sampling_frequency Sampling rate used by the DAC/ADC int 44100 center_frequency Central frequency of the signal (depends on JANUS band) int 11520 bandwidth Signal bandwidth (depends on JANUS band) int 4160 tx_gain Transmitter gain (power) float [0.01-0.99] 0.9 src_addr Source node (modem) identification number int [1-15] 1 dest_addr Identification number of the destination node (modem) int [0-15], 0=broadcast 0 verbosity Verbosity level of the program 0, 1, 2 0 Parameter name Info sampling_frequency Sampling rate used by the DAC/ADC center_frequency Central frequency of the signal (depends on JANUS band) bandwidth Signal bandwidth (depends on JANUS band) tx_gain Transmitter gain (power) src_addr Source node (modem) identification number dest_addr Identification number of the destination node (modem) verbosity Verbosity level of the program Usage janus_executable needs to run for the whole time the modem is operational. The process will both wait for user data to be transmitted and simultaneously will listen to the audio input for incoming signals. Depending on the specified verbosity level, it will also print statistics on sent/incoming frames: level 0 won't output anything while level 2 will print all statistics about sent and incoming data frames. Level 1 will print partial statistics only. If you wish to use a single terminal for running the modem software and sending/receiving data you may run the modem in background using ./janus_executable [params]& (not to use with verbosity >0). By default, the executable will send and receive data to/from the user through a TCP socket: the user must connect to port 55555 in order to visualize incoming messages and send ones. On Linux, nc may be used: the appropriate syntax for connection will be nc localhost 55555 .","title":"Usage"},{"location":"usage/#usage-of-the-sum-opensource-module","text":"After installation , the binary file janus_executable will be created inside the janus_executable folder. That file is executable and has to run for the modem to operate.","title":"Usage of the sum-opensource module"},{"location":"usage/#parameters","text":"janus_executable can be run specifying either no parameters or all of them. When specifying parameters, the user must provide all of them in the following order: ./janus_executable sampling_frequency center_frequency bandwidth tx_gain src_addr dest_addr verbosity When no parameters are specified default values are used. The parameters are explained in detail in the table below. Default values are also reported. Parameter name Info Valid type [and range] Default value sampling_frequency Sampling rate used by the DAC/ADC int 44100 center_frequency Central frequency of the signal (depends on JANUS band) int 11520 bandwidth Signal bandwidth (depends on JANUS band) int 4160 tx_gain Transmitter gain (power) float [0.01-0.99] 0.9 src_addr Source node (modem) identification number int [1-15] 1 dest_addr Identification number of the destination node (modem) int [0-15], 0=broadcast 0 verbosity Verbosity level of the program 0, 1, 2 0 Parameter name Info sampling_frequency Sampling rate used by the DAC/ADC center_frequency Central frequency of the signal (depends on JANUS band) bandwidth Signal bandwidth (depends on JANUS band) tx_gain Transmitter gain (power) src_addr Source node (modem) identification number dest_addr Identification number of the destination node (modem) verbosity Verbosity level of the program","title":"Parameters"},{"location":"usage/#usage","text":"janus_executable needs to run for the whole time the modem is operational. The process will both wait for user data to be transmitted and simultaneously will listen to the audio input for incoming signals. Depending on the specified verbosity level, it will also print statistics on sent/incoming frames: level 0 won't output anything while level 2 will print all statistics about sent and incoming data frames. Level 1 will print partial statistics only. If you wish to use a single terminal for running the modem software and sending/receiving data you may run the modem in background using ./janus_executable [params]& (not to use with verbosity >0). By default, the executable will send and receive data to/from the user through a TCP socket: the user must connect to port 55555 in order to visualize incoming messages and send ones. On Linux, nc may be used: the appropriate syntax for connection will be nc localhost 55555 .","title":"Usage"}]}